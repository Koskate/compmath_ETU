kolvo_exper = 7;
alpha = zeros(1, kolvo_exper);
for l=4:3+kolvo_exper
N = l;
a = 0;
b = 5;

basis = zeros(N, N);
for i=1:N
basis(i,N-i+1) =1;
end
basis_GS = zeros(N,N);
basis;
basis_GS(1,N)=basis(1,N);
for i=2:N
sum = zeros(1,N);
    for j=1:i-1
        sum = sum + (skalyar_proizv(basis(i,:), basis_GS(j,:), a ,b)/skalyar_proizv(basis_GS(j,:), basis_GS(j,:), a ,b))*basis_GS(j,:);
    end
    sum;
    basis_GS(i,:) = basis(i,:)-sum;
end
basis_GS;
uzly_GS = roots(basis_GS(N,:));

x = a:0.01:b;
plot(x, polyval(basis_GS(N, :), x))

a_k = zeros(1, length(uzly_GS));
for k=1:length(uzly_GS)
    A=1;
    for j=[1:k-1, k+1:length(uzly_GS)]
        A=conv(A, [1/(uzly_GS(k)-uzly_GS(j)), -uzly_GS(j)/(uzly_GS(k)-uzly_GS(j))]);
    end
    
    a_k(k) = skalyar_proizv(1, A, a, b);
end
a_k;

y = (uzly_GS).^3;
b_k_x_k = 0;
for i = 1:length(uzly_GS)
    b_k_x_k = b_k_x_k + a_k(i)*abs(y(i));
end
number_exper = l-3
integ_res = b_k_x_k
integ_true = (2/9)*b^(9/2) - (2/9)*a^(9/2)
alpha(1, number_exper) = log(abs(integ_true-integ_res))/log(1/N);
end
alpha

